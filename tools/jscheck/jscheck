#!/usr/bin/env node
// -*- js -*-

var fs = require('fs')
var jsp = require("uglify-js").parser
var pro = require("uglify-js").uglify
var version = '1.0.0'

var errorFormat = '%f:%l: Error: %m'

var usage = [
    ''
  , '  Usage: jscheck [options] [file...]'
  , ''
  , '  Options:'
  , ''
  ,	'    --error-format <str>    Custom error format (%f, %l, %m)'
  , '    -V, --version           Display the version of jscheck'
  , '    -h, --help              Display help information'
  , ''
].join('\n');

var args = process.argv.slice(2);
var files = []

while (args.length) {

	arg = args.shift();
	switch (arg) {

		case '-h':
		case '--help':
			console.error(usage)
			process.exit(1)

		case '-V':
		case '--version':
			console.log(version);
			process.exit(0);

		case '--error-format':
			errorFormat = args.shift()
			break;

		default:
			files.push( arg )
	}
}

var error = false

for (var i=0; i<files.length; i++) {

	var filename = files[i]
	var code =  fs.readFileSync( filename )

	try {
		var ast = jsp.parse(code+'')
	}
	catch(err) {
		var str = errorFormat.replace('%f', filename).replace('%l',err.line).replace('%m', err.message);
		console.error( str );
		error = true
	}
}

if (error)
	process.exit(1);
